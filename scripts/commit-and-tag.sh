#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${BLUE}Usage:${NC}"
    echo "  ./commit-and-tag.sh <commit-message> <tag-name>"
    echo ""
    echo -e "${BLUE}Examples:${NC}"
    echo "  ./commit-and-tag.sh \"add project setup\" \"01-project-setup\""
    echo "  ./commit-and-tag.sh \"implement search endpoint\" \"05-search-endpoint\""
    echo ""
    echo -e "${BLUE}Options:${NC}"
    echo "  -h, --help    Show this help message"
    exit 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    show_help
fi

if [ $# -ne 2 ]; then
    echo -e "${RED}Error: Requires exactly 2 arguments${NC}"
    echo ""
    show_help
fi

COMMIT_MESSAGE="$1"
TAG_NAME="$2"
CURRENT_BRANCH=$(git branch --show-current)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}Error: Not in a git repository${NC}"
    exit 1
fi

echo -e "${BLUE}üîç Current branch:${NC} ${YELLOW}$CURRENT_BRANCH${NC}"
echo -e "${BLUE}üìù Commit message:${NC} $COMMIT_MESSAGE"
echo -e "${BLUE}üè∑Ô∏è  Tag name:${NC} $TAG_NAME"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω–∏–π
echo -e "${BLUE}üìä Changes to be committed:${NC}"
git status --short

if [ -z "$(git status --porcelain)" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  No changes to commit${NC}"
    exit 0
fi

echo ""
read -p "$(echo -e ${YELLOW}Continue? [y/N]:${NC} )" -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}‚ùå Cancelled${NC}"
    exit 0
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–µ–≥
if git tag -l | grep -q "^$TAG_NAME$"; then
    echo -e "${RED}Error: Tag '$TAG_NAME' already exists${NC}"
    echo -e "${BLUE}Existing tags:${NC}"
    git tag -l | tail -5
    exit 1
fi

echo ""
echo -e "${BLUE}üöÄ Starting commit and tag process...${NC}"

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
echo -e "${BLUE}üì¶ Adding changes...${NC}"
if ! git add .; then
    echo -e "${RED}Error: Failed to add changes${NC}"
    exit 1
fi

# –ö–æ–º–º–∏—Ç–∏–º
echo -e "${BLUE}üíæ Creating commit...${NC}"
if ! git commit -m "$COMMIT_MESSAGE"; then
    echo -e "${RED}Error: Failed to create commit${NC}"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ —Å –∞–Ω–Ω–æ—Ç–∞—Ü–∏–µ–π
echo -e "${BLUE}üè∑Ô∏è  Creating tag...${NC}"
if ! git tag -a "$TAG_NAME" -m "$COMMIT_MESSAGE"; then
    echo -e "${RED}Error: Failed to create tag${NC}"
    exit 1
fi

# –ü—É—à–∏–º –∫–æ–º–º–∏—Ç
echo -e "${BLUE}‚¨ÜÔ∏è  Pushing commit...${NC}"
if ! git push origin "$CURRENT_BRANCH"; then
    echo -e "${RED}Error: Failed to push commit${NC}"
    exit 1
fi

# –ü—É—à–∏–º —Ç–µ–≥
echo -e "${BLUE}üè∑Ô∏è  Pushing tag...${NC}"
if ! git push origin "$TAG_NAME"; then
    echo -e "${RED}Error: Failed to push tag${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}‚úÖ Successfully completed!${NC}"
echo -e "${BLUE}üìù Commit:${NC} $(git log -1 --oneline)"
echo -e "${BLUE}üè∑Ô∏è  Tag:${NC} $TAG_NAME"
echo -e "${BLUE}üåø Branch:${NC} $CURRENT_BRANCH"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–µ–≥–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
echo ""
echo -e "${BLUE}üìã Recent tags:${NC}"
git tag -l --sort=-version:refname | head -5
